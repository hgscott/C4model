setwd("Documents/Texas Tech/Smith-lab/C4model/")
library(R.utils)
library(ggplot2)
library(gridExtra)
library(ggpubr)
library(R.matlab)
library(raster)
library(dplyr)
library(tidyr)
library(reshape)
library(R.matlab)
library(maps)
library(rgdal) # Error when installing on linux, fixed with sudo apt install libgdal-dev
library(SDMTools) # Can't install
library(RColorBrewer)
library(grDevices)
library(tiff) # Can't install
library(MODISTools) # Can't install
library(lme4)
# Source model code and functions
# setwd("~/GitHub/C4model")
source("C4model.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
source("Instantaneous_Response.R")
source("prep_long_data.R")
# Source Nick Smith's C3 model
source('../optimal_vcmax_R/calc_optimal_vcmax.R')
sourceDirectory('../optimal_vcmax_R/functions', modifiedOnly = FALSE)
width = 10
height = 6
units = "in"
temp_seq <- prep_long_data(tg_c = c(5:40))
par_seq <- prep_long_data(paro = c(0:1000))
vpd_seq <- prep_long_data(vpdo = c(0:8))
co2_seq <- prep_long_data(cao = c(200:1000))
# Numbers I call out in the paper
#####
# Vcmax response to VPD
vpd_seq_02 <-C4model(vpdo = c(0:8))
# Decrease in obs
(vpd_seq_02$obs[1] - vpd_seq_02$obs[9])/vpd_seq_02$obs[1]
# Decrease in chi_bs==
(vpd_seq_02$chi_bs[1] - vpd_seq_02$chi_bs[9])/vpd_seq_02$chi_bs[1]
delta <- (filter(co2_seq, Path == "C4", measure == "Ac")$value - filter(co2_seq, Path == "C3", measure == "A")$value)/filter(co2_seq, Path == "C3", measure == "A")$value
plot(delta)
delta <- (filter(temp_seq, Path == "C4", measure == "Ac")$value - filter(temp_seq, Path == "C3", measure == "A")$value)/filter(temp_seq, Path == "C3", measure == "A")$value
plot(delta)
delta <- (filter(vpd_seq, Path == "C4", measure == "Ac")$value - filter(vpd_seq, Path == "C3", measure == "A")$value)/filter(vpd_seq, Path == "C3", measure == "A")$value
plot(delta)
# Delta numbers
current_co2 <- C4model(tg_c = c(1:40))
current_co2_c3 <- calc_optimal_vcmax(tg_c = c(1:40))
current_co2_c3$A <- current_co2_c3$vcmax * current_co2_c3$mc
current_delta <- (current_co2$Ac - current_co2_c3$A)/current_co2_c3$A
high_co2 <- C4model(tg_c = c(1:40), cao = 1000)
high_co2_c3 <- calc_optimal_vcmax(tg_c = c(1:40), cao = 1000)
high_co2_c3$A <- high_co2_c3$vcmax * high_co2_c3$mc
high_delta <- (high_co2$Ac - high_co2_c3$A)/high_co2_c3$A
current_delta[15]
high_delta
