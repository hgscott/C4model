# Load packages
library(R.utils)
# Source model code and functions
source("C4model.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
# Test model
C4model()
# Load packages
library(R.utils)
# Source model code and functions
source("C4model.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
# Test model
C4model()
# Load packages
library(R.utils)
# Source model code and functions
source("C4model.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
# Test model
C4model()
C4model
C4model(cao = seq(200, 600, 100))
calc_gammastar_pa(25, 0)
20*0.13
# C4model: Predicts acclimated
# Helen Scott
# Last Updated: 03/27/2020
#
# Arguments
## tg_c: acclimated temperature (degC)
## z: elevation (m)
## vpdo: vapor pressure deficit at sea level (kPa)
## cao: atmospheric CO2 at sea level (Pa)
## paro: photosynthetically active radiation at sea level (?mol m-2 s-1)
## q025: quantum efficiency of photosynthetic electron transport (mol/mol)
## theta: curvature of the light response of electron transport (unitless)
## R: universal gas constant (J mol-1 K-1)
#
# Returns
## tg_c: acclimated temperature (degC)
## par: photosynthetically active radiation at z (?mol m-2 s-1)
## ca: atmospheric CO2 at z (Pa)
## z: elevation (m)
## vpd: vapor pressure deficit at z (kPa)
## q0: quantum efficiency of photosynthetic electron transport at tg_c (mol/mol)
## kp: michaelis menten coefficient for PEPc (Pa)
## kr: Michaelis-Menten constant for Rubisco carboxylation (Pa)
## chi: leaf intercellular to atmospheric CO2 ratio (ci/ca) (unitless)
## ci: leaf intercellular CO2 concentation (Pa)
## cbs: bundle sheath CO2 pressure (Pa)
## obs: bundle sheath O2 pressure (Pa)
## jmax: optimal maximum rate of electron transport at tg (?mol m-2 s-1)
## vpmax: maximum rate of PEPc (?mol m-2 s-1)
## vcmax: maximum rate of Rubisco carboxylation (?mol m-2 s-1)
## Al: light-limited photosynthesis (?mol m-2 s-1)
## Ap: PEPc-limited photosynthesis (?mol m-2 s-1)
## Ac: Rubisco-limited photosynthesis (?mol m-2 s-1)
C4model <- function(tg_c = 25, z = 0, vpdo = 1, cao = 400,
paro = 800, q025 = 0.25, theta = 0.85, R = 8.314){
# environmental terms
patm <- calc_patm(z)
par <- calc_par(paro, z)
vpd <- calc_vpd(tg_c, z, vpdo)
ca <- cao * 1e-6 * patm
# Calculate Gamma star
gamma_star <- calc_gammastar_pa(tg_c, z) # pa
# calc chi
chi <- calc_chi_xi_resp(ca, tg_c, vpd, z, gamma_star)[1]
# calc ci ( = cm)
ci <- chi * ca # Eqn. 2.36
cm <- ci
# Light Limited Photosynthesis
# Jmax stuff
omega <- calc_omega(theta = theta, c = 0.079, m = 1) # Eq. S4
omega_star <- (1 + (omega) - sqrt((1 + (omega))^2 - (4 * theta * omega)))  # Eq. 18
q0 = q025 * phi_ftemp(tg_c)
Al <- q0 * par * omega_star / (8 * theta) # Eqn. 2.2
jmax = q0 * par * omega
# calc kp
kp <- calc_kp_temp_pa(tg_c, z) # Eqn. 2.43
# calc kr
kr <- calc_kc_temp_pa(tg_c, z) # Eqn. 2.48
# calc ko
ko <- calc_ko_temp_pa(tg_c, z)
# calc vpmax
vpmax <- ((kp + cm)/cm) * (q0 * par * omega_star / (8 * theta)) # Eqn. 2.42
Ap <- vpmax * (cm / (cm + kp))
# calc cbs
cbs <- calc_cbs(z, Al, vpmax, cm) # Eqn. 2.41
# calc obs
chi_2 <- cbs/cm
om <- 2.09476e5
om_pa <- om * (1e-6) * patm
obs <- om * chi_2
# calc vcmax
vcmax <- Ap * ((cbs + kr * (1 + obs/ko)) / cbs) # Eqn. 2.47
Ac <- vcmax * ((cbs - gamma_star) / (kr * (1 + obs/ko) + cbs)) # Eqn. 2.4
results <- data.frame("tg_c" = tg_c,
"par" = par,
"ca" = ca,
"z" = z,
"vpd" = vpd,
"q0" = q0,
"kp" = kp,
"kr" = kr,
"chi" = chi,
"ci" = ci,
"cbs" = cbs,
"obs" = obs,
"jmax" = jmax,
"vpmax" = vpmax,
"vcmax" = vcmax,
"Al" = Al,
"Ap" = Ap,
"Ac" = Ac)
return(results)
}
C4model(cao = seq(300, 1000, 100))
# Load packages
library(R.utils)
# Source model code and functions
source("C4model.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
# Test model
C4model()
C4model(cao = seq(300, 1000, 100))
# Load packages
library(R.utils)
library(ggplot2)
# Source model code and functions
source("C4model.R")
source("pmodel.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
# Run model across all the variables
temp_seq <- C4model(tg_c = c(1:40))
par_seq <- C4model(paro = c(0:1000))
vpd_seq  <- C4model(vpdo = c(0:8))
co2_seq <- C4model(cao = c(5:1000))
# Run for C3 across the same sequences
c3_temp_seq <- pmodel(tg_c = c(1:40))
c3_par_seq <- pmodel(paro = c(0:1000))
c3_vpd_seq  <- pmodel(vpdo = c(0:8))
c3_co2_seq <- pmodel(cao = c(5:1000))
co2_seq <- C4model(cao = c(5:1000))
C4model(cao = seq(300, 1000, 100))
z = 0
patm <- calc_patm(z)
gbs <- 3 # mmol m^-2 s^-1
gbs <- gbs * 10^-3 # Convert from mmol to mol m^-2 s^-1
Al <-37.27137
A_gross <- Al
vpmax = 59.32535
Rd <- 0.04 * vpmax # Leaf mitochondrial respiration, 4 coming from rounding 3.9 or 4.4 % from the ecology LCE paper
Rd
Rm <- 0.5 * Rd
Rm
An <- A_gross - Rm
An
A_gross
CCM <- ((vpmax - An)/gbs) # micromol mol^-1 # NEEDS ADJUSTED
CCM
CCM <- CCM * 1e-6 * patm # Convert to Pa # NEEDS ADJUSTED
CCM
CCM <- ((vpmax - An)/3000)
CCM <- CCM * 1e-6 * patm # Convert to Pa # NEEDS ADJUSTED
CCM
Cbs <- cm + CCM
cm = 20.13112
Cbs <- cm + CCM
Cbs
cm = 26.84149
Cbs <- cm + CCM
patm
CCM
library(R.utils)
library(ggplot2)
# Source model code and functions
source("C4model.R")
source("pmodel.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
C4model(cao = seq(300,600, 100))
library(R.utils)
library(ggplot2)
# Source model code and functions
source("C4model.R")
source("pmodel.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
C4model(cao = seq(300,600, 100))
CCM
patm <- calc_patm(z)
gbs <- 0.003 # 3 mmol m^-2 s^-1 * 1000 to convert to micromol
#gbs <- gbs * 10^-3 # Convert from mmol to mol m^-2 s^-1
A_gross <- Al
Rd <- 0.04 * vpmax # Leaf mitochondrial respiration, 4 coming from rounding 3.9 or 4.4 % from the ecology LCE paper
Rm <- 0.5 * Rd
An <- A_gross - Rm
CCM <- ((vpmax - An)/gbs) # micromol mol^-1 # NEEDS ADJUSTED
CCM <- CCM * 1e-6 * patm # Convert to Pa # NEEDS ADJUSTED
Cbs <- cm + CCM
return(Cbs)
CCM
90/.003
Al
An
(Al-An) / 0.003
library(R.utils)
library(ggplot2)
# Source model code and functions
source("C4model.R")
source("pmodel.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
C4model(cao = seq(300,600, 100))
# Load packages
library(R.utils)
library(ggplot2)
# Source model code and functions
source("C4model.R")
source("pmodel.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
C4model(cao = seq(300,600, 100))
C4model(cao = seq(300,1000, 100))
# Load packages
library(R.utils)
library(ggplot2)
# Source model code and functions
source("C4model.R")
source("pmodel.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
C4model(cao = seq(300,1000, 100))
# Load packages
library(R.utils)
library(ggplot2)
# Source model code and functions
source("C4model.R")
source("pmodel.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
C4model(cao = seq(300,1000, 100))
# Load packages
library(R.utils)
library(ggplot2)
# Source model code and functions
source("C4model.R")
source("pmodel.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
C4model(cao = seq(300,1000, 100))
patm <- calc_patm(z)
gbs <- 0.003 # 3 mmol m^-2 s^-1 * 1000 to convert to micromol
#gbs <- gbs * 10^-3 # Convert from mmol to mol m^-2 s^-1
A_gross <- Al
Rd <- 0.04 * vpmax # Leaf mitochondrial respiration, 4 coming from rounding 3.9 or 4.4 % from the ecology LCE paper
Rm <- 0.5 * Rd
An <- A_gross - Rm
CCM <- ((Al - An)/gbs) # micromol mol^-1 # NEEDS ADJUSTED
CCM
CCM * 1e-6 * patm
cm + CCM
CCM <- CCM * 1e-6 * patm # Convert to Pa # NEEDS ADJUSTED
Cbs <- cm + CCM
Cbs
cm
CCM
calc_cbs <- function(z, Al, vpmax, cm) {
patm <- calc_patm(z)
gbs <- 0.003 # 3 mmol m^-2 s^-1 * 1000 to convert to micromol
#gbs <- gbs * 10^-3 # Convert from mmol to mol m^-2 s^-1
A_gross <- Al
Rd <- 0.04 * vpmax # Leaf mitochondrial respiration, 4 coming from rounding 3.9 or 4.4 % from the ecology LCE paper
Rm <- 0.5 * Rd
An <- A_gross - Rm
CCM <- ((Al - An)/gbs) # micromol mol^-1 # NEEDS ADJUSTED
CCM <- CCM * 1e-6 * patm # Convert to Pa # NEEDS ADJUSTED
Cbs <- cm + CCM
return(Cbs)
}
calc_cbs <- function(z, Al, vpmax, cm) {
patm <- calc_patm(z)
gbs <- 0.003 # 3 mmol m^-2 s^-1 * 1000 to convert to micromol
#gbs <- gbs * 10^-3 # Convert from mmol to mol m^-2 s^-1
A_gross <- Al
Rd <- 0.04 * vpmax # Leaf mitochondrial respiration, 4 coming from rounding 3.9 or 4.4 % from the ecology LCE paper
Rm <- 0.5 * Rd
An <- A_gross - Rm
CCM <- ((Al - An)/gbs) # micromol mol^-1 # NEEDS ADJUSTED
CCM <- CCM * 1e-6 * patm # Convert to Pa # NEEDS ADJUSTED
Cbs <- cm + CCM
return(Cbs)
}
# Load packages
library(R.utils)
library(ggplot2)
# Source model code and functions
source("C4model.R")
source("pmodel.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
C4model(cao = seq(300,1000, 100))
C4model(paro = seq(0, 2000, 500))
# Load packages
library(R.utils)
library(ggplot2)
# Source model code and functions
source("C4model.R")
source("pmodel.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
C4model(paro = seq(0, 2000, 500))
# Load packages
library(R.utils)
library(ggplot2)
# Source model code and functions
source("C4model.R")
source("pmodel.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
C4model(paro = seq(0, 2000, 500))
# Load packages
library(R.utils)
library(ggplot2)
# Source model code and functions
source("C4model.R")
source("pmodel.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
C4model(paro = seq(0, 2000, 500))
C4model(tg_c = seq(0, 30, 10))
C4model(paro = seq(0, 2000, 500))
library(R.utils)
# Source model code and functions
source("C4model.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
# Test model
C4model()
library(R.utils)
# Source model code and functions
source("C4model.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
# Test model
C4model()
# Source model code and functions
source("C4model.R")
# Test model
C4model()
C4model(q025 = 0.1, tg_c = seq(5, 35, 10))
# Source model code and functions
source("C4model.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
# Test model
C4model()
# Source model code and functions
source("C4model.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
# Test model
C4model()
# Test model
C4model(q025 = 0.1)
# Test model
C4model(q025 = 0.1, tg_c = seq(5, 35, 10))
626.4833/ 12921.449
library(plantecophys)
library(R.utils)
# Source model code and functions
source("C4model.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
# Test model
C4model()
library(R.utils)
# Source model code and functions
source("C4model.R")
sourceDirectory("functions/", modifiedOnly = FALSE)
# Test model
C4model()
C4_mode(tg_c = seq(5,35,10))
C4_model(tg_c = seq(5,35,10))
C4model(tg_c = seq(5,35,10))
