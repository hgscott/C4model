library(readr)
please <- read_csv("FELIX/var_call_new/VCF-compare/please.csv")
View(please)
shiny::runApp('FELIX/RShiny/Learning/My-App')
install.packages("ensembldb")
install.packages("EnsDb.Hsapiens.v75")
install.packages("rtracklayer")
install.packages("BiocManager")
BiocManager::install("TCVTB")
browseVignettes("TVTB")
browseVignettes("TCVTB")
BiocManager::install("TVTB")
browseVignettes("TVTB")
library(TVTB)
library(shiny)
library(datasets)
library(ggplot2)
install.packages("rlang")
library(ggplot2)
install.packages("ggplot2")
library(shiny)
library(datasets)
library(ggplot2)
install.packages("shiny")
library(shiny)
install.packages("Rcpp")
library(shiny)
library(shiny)
library(datasets)
library(ggplot2)
runApp('FELIX/RShiny/Learning/My-App')
runApp('FELIX/RShiny/Learning/My-App')
shiny::runApp('FELIX/RShiny/Learning/My-App')
# natural_variant_plot01
# Helen Scott
# Last updated: 01/23/2020
library(data.table)
library(stringr)
library(ggplot2)
library(ggExtra)
library(dplyr)
# Try with just 1 VCF
#####
# Read in VCF file
vcf <- fread('Brute_Force_Clean/filtered_AWRI1631_AWRI_2008_ABSV01000000.vcf.recode.vcf')
# Dot plot
plot <- ggplot(vcf, aes(x = POS)) + geom_dotplot() + xlim(461841, 462516)
# All the VCFs
# Read in all the brute force cleaned files
## This won't run as is, I changed the working directory halfway through
vcf_files <- list.files('Brute_Force_Clean/', pattern = "*.vcf.recode.vcf")
names <- str_sub(vcf_files, 10, -16)
for(i in names){
filepath = paste("filtered_", i, ".vcf.recode.vcf", sep = "")
assign(i, fread(filepath))
}
# Plot everything
plot_all <- ggplot(AWRI1631_AWRI_2008_ABSV01000000, aes(x = POS)) +
geom_dotplot(binpositions = "all", stackgroups = TRUE, position = "dodge") +
geom_dotplot(data = `CEN.PK2-1Ca_SGD_2015_JRIV01000000`, color = "red", binpositions = "all", stackgroups = TRUE, binwidth = 1) +
geom_dotplot(data = CLIB215_WashU_2010_AEWP01000000, binpositions = "all", stackgroups = TRUE, binwidth = 1) +
geom_dotplot(data = DBVPG6044_Stanford_2014_JRIG00000000, binpositions = "all", stackgroups = TRUE, binwidth = 1) +
geom_dotplot(data = EC1118_Genoscope_2009_PRJEA37863, binpositions = "all", stackgroups = TRUE, binwidth = 1) +
geom_dotplot(data = `JK9-3d_SGD_2015_JRIZ00000000`, binpositions = "all", stackgroups = TRUE, binwidth = 1) +
geom_dotplot(data = RedStar_Stanford_2014_JRIL00000000, binpositions = "all", stackgroups = TRUE, binwidth = 1) +
geom_dotplot(data = T73_WashU_2011_AFDF01000000, binpositions = "all", stackgroups = TRUE, binwidth = 1) +
geom_dotplot(data = `UWOPS05-217-3_Stanford_2014_JRIM00000000`, binpositions = "all", stackgroups = TRUE, binwidth = 1) +
geom_dotplot(data = Vin13_AWRI_2010_ADXC01000000, binpositions = "all", stackgroups = TRUE, binwidth = 1) +
geom_dotplot(data = W303_MPG_2012_ALAV00000000, binpositions = "all", stackgroups = TRUE, binwidth = 1) +
geom_dotplot(data = W303_SGD_2015_JRIU00000000, binpositions = "all", stackgroups = TRUE, binwidth = 1) +
geom_dotplot(data = Y10_WashU_2011_AEWK01000000, binpositions = "all", stackgroups = TRUE, binwidth = 1) +
geom_dotplot(data = YPS163_Stanford_2014_JRIC00000000, binpositions = "all", stackgroups = TRUE, binwidth = 1) +
geom_dotplot(data = YS9_Stanford_2014_JRIB00000000, binpositions = "all", stackgroups = TRUE, binwidth = 1) +
xlim(461841, 462516)
plot_all2 <- ggplot(AWRI1631_AWRI_2008_ABSV01000000, aes(x = POS)) +
geom_dotplot(binpositions = "all", stackgroups = TRUE, position = "dodge") +
geom_dotplot(data = `CEN.PK2-1Ca_SGD_2015_JRIV01000000`, color = "red", stackgroups = TRUE, position = "dodge") +
geom_dotplot(data = CLIB215_WashU_2010_AEWP01000000, binpositions = "all", stackgroups = TRUE, position = "dodge") +
geom_dotplot(data = DBVPG6044_Stanford_2014_JRIG00000000, binpositions = "all", stackgroups = TRUE, position = "dodge") +
geom_dotplot(data = EC1118_Genoscope_2009_PRJEA37863, binpositions = "all", stackgroups = TRUE, position = "dodge") +
geom_dotplot(data = `JK9-3d_SGD_2015_JRIZ00000000`, binpositions = "all", stackgroups = TRUE, position = "dodge") +
geom_dotplot(data = RedStar_Stanford_2014_JRIL00000000, binpositions = "all", stackgroups = TRUE, position = "dodge") +
geom_dotplot(data = T73_WashU_2011_AFDF01000000, binpositions = "all", stackgroups = TRUE, position = "dodge") +
geom_dotplot(data = `UWOPS05-217-3_Stanford_2014_JRIM00000000`, binpositions = "all", stackgroups = TRUE, position = "dodge") +
geom_dotplot(data = Vin13_AWRI_2010_ADXC01000000, binpositions = "all", stackgroups = TRUE, position = "dodge") +
geom_dotplot(data = W303_MPG_2012_ALAV00000000, binpositions = "all", stackgroups = TRUE, position = "dodge") +
geom_dotplot(data = W303_SGD_2015_JRIU00000000, binpositions = "all", stackgroups = TRUE, position = "dodge") +
geom_dotplot(data = Y10_WashU_2011_AEWK01000000, binpositions = "all", stackgroups = TRUE, position = "dodge") +
geom_dotplot(data = YPS163_Stanford_2014_JRIC00000000, binpositions = "all", stackgroups = TRUE, position = "dodge") +
geom_dotplot(data = YS9_Stanford_2014_JRIB00000000, binpositions = "all", stackgroups = TRUE, position = "dodge") +
xlim(461841, 462516)
# Combine all the data into a sinlge daa.frame
data1 <- cbind(AWRI1631_AWRI_2008_ABSV01000000, "AWRI1631")
data2 <- cbind(`CEN.PK2-1Ca_SGD_2015_JRIV01000000`, "CEN.PK2")
data3 <- cbind(CLIB215_WashU_2010_AEWP01000000, "CLIB215")
data4 <- cbind(DBVPG6044_Stanford_2014_JRIG00000000, "DBVPG6044")
data5 <- cbind(EC1118_Genoscope_2009_PRJEA37863, "EC1118")
data6 <- cbind(`JK9-3d_SGD_2015_JRIZ00000000`, "JK9")
data7 <- cbind(RedStar_Stanford_2014_JRIL00000000, "RedStar")
data8 <- cbind(T73_WashU_2011_AFDF01000000, "T73")
data9 <- cbind(`UWOPS05-217-3_Stanford_2014_JRIM00000000`, "UWOPS05")
data10 <- cbind(Vin13_AWRI_2010_ADXC01000000, "Vin13")
data11 <- cbind(W303_MPG_2012_ALAV00000000, "W303_MPG")
data12 <- cbind(W303_SGD_2015_JRIU00000000, "W303_SGD")
data13 <- cbind(Y10_WashU_2011_AEWK01000000, "Y10")
data14 <- cbind(YPS163_Stanford_2014_JRIC00000000, "YPS163")
data15 <- cbind(YS9_Stanford_2014_JRIB00000000, "YS9")
data_all <- rbind(data1, data2, data3, data4, data5, data6, data7, data8, data9, data10, data11, data12, data13, data14, data15)
data_all_weird <- cbind(data_all, 1)
names(data_all_weird)[12] <- "weird"
plot3 <- ggplot(data_all, aes(x = POS)) + geom_dotplot()
plot4 <- ggplot(data_all, aes(x = POS, fill = V2)) +
geom_dotplot(stackgroups = TRUE) +
xlab("Chromosome 4 Base Position (TRP1: 461841-462516)") +
ylab("Proportion of Strains") + labs(fill = "Variant Strains")
# Add in T&E data
R123_vcf <- fread("filtered_R123-R1.vcf")
R123 <- cbind(R123_vcf, "R123")
plot5 <- ggplot(data_all, aes(x = POS)) +
geom_dotplot(aes(fill = V2), stackgroups = TRUE) +
xlab("Chromosome 4 Base Position (TRP1: 461841-462516)") +
ylab("Proportion of Strains") + labs(fill = "Variant Strains")
plot6 <- plot5 + geom_dotplot(data = R123, dotsize = 1.25)
# R125
R125_vcf <- fread("filtered_R125-R1.vcf")
R125 <- cbind(R125_vcf, "R125")
plot7 <- plot5 + geom_dotplot(data = R125, dotsize = 1.25)
# R194
R194_vcf <- fread("filtered_R194-R1.vcf")
R194 <- cbind(R194_vcf, "R194")
plot8 <- plot5 + geom_dotplot(data = R194, dotsize = 1.25)
# Add second axis title
plot6_v2 <- plot5 + geom_dotplot(data = R123, dotsize = 1) +
scale_y_continuous(NULL, breaks = NULL)  +
ylab("Count")
# Rename first axis to be a whole number
# Hardcoding
yheight <- 9
plot5_v2 <- ggplot(data_all, aes(x = POS, y = weird)) +
geom_dotplot(method = "histodot", aes(fill = V2), stackgroups = TRUE) +
xlab("Chromosome 4 Base Position (TRP1: 461841-462516)") + labs(fill = "Variant Strains") + coord_fixed(ratio = 30 * yheight)
plot5_v3 <- ggplot(data_all, aes(x = POS)) +
geom_dotplot(aes(fill = V2), method = "histodot", stackgroups = TRUE) +
xlab("Chromosome 4 Base Position (TRP1: 461841-462516)") +
ylab("Number of Varaints at Each Base") + labs(fill = "Variant Strains") + theme(axis.text.y = element_blank(), axis.ticks = element_blank())
plot6_v3 <- plot5_v3 + geom_dotplot(data = R123, aes(fill = V2), stackgroups = TRUE)
plot_y <- ggplot(R123, aes(x = POS)) + geom_dotplot()
data_comb <- rbind(data_all, R123)
plot9 <- ggplot(data_all, aes(x = POS)) +
geom_dotplot(aes(fill = V2), stackgroups = TRUE, method = "histodot") +
xlab("Chromosome 4 Base Position (TRP1: 461841-462516)") +
ylab("Number of Varaints at Each Base") + labs(fill = "Variant Strains") + theme(axis.text.y = element_blank(), axis.ticks = element_blank())
plot10 <- plot9 + geom_dotplot(data = R123, stackgroups = TRUE, method = "histodot")
data_all_class <- cbind(data_all, "Natural Variant")
R123_class <- cbind(R123, "R123")
R125_class <- cbind(R125, "R125")
R194_class <- cbind(R194, "R194")
data_comb_all <- rbind(data_all_class, R123_class, R125_class, R194_class)
names(data_comb_all)[12] <- "Strain"
plot11 <- ggplot(data_comb_all, aes(x = POS)) +
geom_dotplot(aes(fill = Strain), stackgroups = TRUE, method = "histodot") +
scale_fill_manual(values = c("gray", "red", "blue", "green")) +
xlab("Chromosome 4 Base Position (TRP1: 461841-462516)") +
ylab("Number of Varaints at Each Base (+/- 4 bp)") +
theme(axis.text.y = element_blank(), axis.ticks = element_blank())
plot12 <- ggplot(data_comb_all, aes(x = POS)) +
geom_dotplot(aes(fill = Strain), stackgroups = TRUE, method = "histodot") +
scale_fill_manual(values = c("gray", "red", "blue", "green")) +
xlab("Chromosome 4 Base Position (TRP1: 461841-462516)") +
ylab("Number of Varaints at Each Base (+/- 4 bp)") +
theme(axis.text.y = element_blank(), axis.ticks = element_blank(),
axis.text.x = element_text(462000))
# Manufactured Soil Market
# CAGR = 6.4% (https://www.businesswire.com/news/home/20191107005436/en/Global-Manufactured-Soil-Market-Analysis-Trends-Forecasts)
data <- []
# Manufactured Soil Market
# CAGR = 6.4% (https://www.businesswire.com/news/home/20191107005436/en/Global-Manufactured-Soil-Market-Analysis-Trends-Forecasts)
data <- ()
# Manufactured Soil Market
# CAGR = 6.4% (https://www.businesswire.com/news/home/20191107005436/en/Global-Manufactured-Soil-Market-Analysis-Trends-Forecasts)
data <- c()
seq(2019:2025)
data$year <- seq(2019:2025)
data$value[1] <- -9999
View(data)
data$value[1] <- 0
data$value[1] <- 0.6
(1 + 0.064)^7
data$value[1] * (1 + 0.064)^7
# Libraries needed
library(devtools)
install.packages("devtools")
install.packages("neonUtilities")
install.packages("raster")
devtools::install_github("NEONScience/NEON-geolocation/geoNEON")
# Open librarues
library(devtools)
library(neonUtilities)
library(raster)
library(geoNEON)
library(rhdf5)
library(BiocManager)
library(rhdf5)
rhdf5
View(CO2)
which(CO2$Type == "Quebec")
length(which(CO2$Type == "Quebec"))
length(which(CO2$Type == "Quebec" || CO2$Treatment == "nonchilled"))
length(which(CO2$Type == "Quebec" & CO2$Treatment == "nonchilled"))
qbc_nc <- length(which(CO2$Type == "Quebec" & CO2$Treatment == "nonchilled"))
# Add MODIS for bare land
#####
sds <- get_subdatasets('C:/Users/hscott/Desktop/MCD12C1.A2001001.006.2018053185512.hdf')
library(R.matlab)
library(raster)
library(maps)
library(R.utils)
library(rgdal)
library(SDMTools)
library(RColorBrewer)
library(grDevices)
library(ggplot2)
library(ggpubr)
library(rgdal)
library(dplyr)
library(gdalUtils)
# Add MODIS for bare land
#####
sds <- get_subdatasets('C:/Users/hscott/Desktop/MCD12C1.A2001001.006.2018053185512.hdf')
View(sds)
grasslands <- readGDAL(sds[6])
source('~/GitHub/C4model/C4model.R')
library(devtools)
install_github("andrewzm/STRbook")
library("STRbook")
library("STRbook")
library(devtools)
install_github("andrewzm/STRbook")
remove.packages("digest")
source('~/GitHub/Publication2020/figure_code.R')
source('~/GitHub/C4model/C4model.R')
source('~/GitHub/C4model/figure_code_v3.R', echo=TRUE)
source('~/GitHub/C4model/figure_code_v3.R', echo=TRUE)
getwd()
